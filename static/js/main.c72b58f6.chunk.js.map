{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchBox/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","search_box_component_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"wTAKaA,eAAO,SAACC,GAAD,OAEhBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BACtBR,EAAAC,EAAAC,cAAA,UAAKH,EAAMQ,QAAQE,MACnBT,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,QAAQG,UCJbC,EAAW,SAAAZ,GAAK,OAEzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAIXJ,EAAMa,SAASC,IAAI,SAAAN,GAAO,OACtBP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,QCT/BS,eAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OAErBnB,EAAAC,EAAAC,cAAA,SACIC,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCHG,cArCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAeFP,aAAe,SAAAW,GACbP,EAAKQ,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAdrCX,EAAKY,MAAQ,CACXvB,SAAU,GACVoB,YAAa,IALHT,mFASM,IAAAa,EAAAV,KAClBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAACnB,SAAU6B,uCASjC,IAAAC,EACyBhB,KAAKS,MAA9BvB,EADA8B,EACA9B,SAAUoB,EADVU,EACUV,YACXW,EAAmB/B,EAASgC,OAAO,SAAArC,GAAO,OAC7CA,EAAQE,KAAKoC,cAAcC,SAASd,EAAYa,iBAEnD,OACA7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,8BACEF,EAAAC,EAAAC,cAAC6C,EAAD,CAAW7B,YAAc,kBAAkBC,aAAgBO,KAAKP,eAChEnB,EAAAC,EAAAC,cAAC8C,EAAD,CAAUpC,SAAY+B,YAjCVM,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvB,EAAA,GAAAQ,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAArB,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP7D,EAAAC,EAAAC,cAACF,EAAAC,EAAM6D,WAAP,KACE9D,EAAAC,EAAAC,cAAC6D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.c72b58f6.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\n\nexport const Card = (props) => (\n\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n\n)\n\n","import React from 'react';\n//Bringing in the CSS\nimport './card-list.styles.css';\n\nimport {Card} from '../card/card.component';\n\nexport const CardList = props => (\n    \n    <div className='card-list'>\n    \n    {\n        //This uses map (which iterates over each element and runs the function on each object)\n        props.monsters.map(monster => (\n            <Card key={monster.id} monster={monster}/>\n          ))\n\n    }\n    \n    </div>\n\n)","import React from 'react';\nimport './search-box.styles.css'\n\n//export makes the component useable in the app\nexport const SearchBox = ({ placeholder, handleChange }) => (\n\n    <input \n        className='search'\n        type='search' \n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n\n)","import React, { Component } from 'react';\n\nimport {CardList} from './components/card-list/card-list.component'\n\nimport './App.css';\nimport { SearchBox } from './components/searchBox/search-box.component';\n\n\n\n\nclass App extends Component{\n\n  //Creating a State\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}));\n  }\n\n  //Adding a handleChange method to the App to make it more generic\n  handleChange = e => {\n    this.setState({searchField: e.target.value});\n  }\n\n  //Actually Render the content\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n       monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n    <div className=\"App\">\n    <h1>Monsters Rolodex</h1>\n      <SearchBox placeholder = 'Search Monsters' handleChange = {this.handleChange} />\n      <CardList monsters = {filteredMonsters} />  \n    </div>\n    )\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}